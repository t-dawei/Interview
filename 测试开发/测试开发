测试开发素质：
    作为一名测试开发工程师，首先需要对你测试的产品负责
        1. 在个人的工作态度上，需要你严谨、细致、耐心和认真，因为bug经常会出现在细小的地方

        2. 在专业的技术上，不仅需要对你负责的产品要有一个深入的了解，还要有专业的测试理论知识以及测试技术
        只要扎实的业务知识以及广泛的专业技术，才能应对随时产生的各种bug

        3. 在沟通的能力上，测试人员需要经常和不同的人打交道，如何简明扼要的描述bug，并要开发人员接受你的意见，这时一个良好的沟通能力和表达能力就显得比较重要。

        4. 在思维能力上，如果测试人员不仅能发现bug，并能准确bug出现的原因或者问题出现的源头，可以更好的帮助开发人员修改bug

        5. 在学习的能力上，因为技术是不断更新的，一名合格的测试工程师需要不断的去学习新的技术、不断和他人交流和分享，这样才能不断的提狗自己的测试能力和水平。

你觉得你做测试的优势在哪里：
    1. 在工作上我不喜欢拖延，对自己的工作负责，在细致、耐心方面比较适合做测试开发。
    3. 而且平时也比较容易与人相处，喜欢团队合作，有良好的沟通合作能力。
    2. （在专业知识上）虽然没有实际的项目经验，但我觉得我的学习能力还可以，但我最近也在看一些测试开发的基础知识，在coding方面，而且我比较喜欢python，也经常写一些处理数据脚本。

为什么选择测试开发？你对测试最大的兴趣是什么？
    1. （方向）首先因为我找工作比较晚麻， 差不多10月开始，当时给自己定的方向就是后台开发或者测试开发 然后开始复习
    2. （测试也需要编程脚本，我也喜欢）后台开发和测试开发其实我都可以接受，测试开发可能就偏向于测试多一点，但还是有一些开发在里面，比如编写自动化脚本什么的，而且我也经常利用python写一些数据处理的脚本。
    3. （互补）而且学习后台和测试开发也不是很冲突，因为有些后台开发经验也是有益于测试开发的。
    4. （挑战性工作）而且测试开发是一项很具有挑战性的工作，比较依靠经验，做的越多，能力越强。术业有专攻麻，也值得认可。
    5. （成就感）一个好的产品离不开测试的支持，最重要的是当你发现了一个研发人员没有发现的bug那种成就感。

黑盒测试和白盒测试主要的测试方法：
    黑盒测试：等价类划分、边界值分析
    白盒测试：逻辑覆盖法：
逻辑覆盖包括：（属于动态测试、白盒测试）

    语句覆盖：所有的“语句”都要覆盖一遍

    判定覆盖：包含语句覆盖，每个判断T、F各一次

    条件覆盖：包含语句覆盖，每个条件T、F各一次

    判定条件覆盖：包含判定覆盖、条件覆盖

    条件组合覆盖：每个条件的每种组合

    路径覆盖：所有执行路径

1.语句覆盖：
设计若干测试用例，运行被测程序，使程序中每个可执行语句至少执行一次。只需设计一个测试用例:a=2，b=1，c=6；即达到了语句覆盖。
【优点】 ：可以很直观地从源代码得到测试用例，无须细分每条判定表达式。
【缺点】 ：由于这种测试方法仅仅针对程序逻辑中显式存在的语句，但对于隐藏的条件是无法测试的。如在多分支的逻辑运算中无法全面的考虑。语句覆盖是最弱的逻辑覆盖。
2.判定覆盖: 设计若干测试用例，运行被测程序，使得程序中每个分支的取真值和取假值至少一次，即判断真假值均曾被满足。a=2，b=1 ，c=6（M,Q分支全为真）和a=-2，b=-1 ，c=-3（M,Q分支全为假）这两组测试用例可覆盖所有判定的真假分支。
【优点】：判定覆盖具有比语句覆盖更强的测试能力。同样判定覆盖也具有和语句覆盖一样的简单性，无须细分每个判定就可以得到测试用例。
【缺点】：往往大部分的判定语句是由多个逻辑条件组合而成，若仅仅判断其整个最终结果，而忽略每个条件的取值情况，必然会遗漏部分测试路径。判定覆盖仍是弱的逻辑覆盖。
3.条件覆盖：设计若干测试用例，执行被测程序以后要使每个判断中每个条件的可能取值至少满足一次。
判断M表达式:设条件 a>0 取真 记为 T1 ；假F1
条件 b>0 取真 记为 T2 ；假F2
判断Q表达式:设条件 a>1 取真 记为 T3 ；假F3
条件 c>1 取真 记为 T4 ；假F4
我们用条件覆盖设计的思想就是让测试用例能覆盖T1、T2、T3、T4、F1、F2、F3、F4
【优点】：增加了对条件判定情况的测试，增加了测试路径。
【缺点】：条件覆盖不一定包含判定覆盖。例如，我们刚才设计的用例就没有覆盖判断M的Y分支和判断Q的N分支。条件覆盖只能保证每个条件至少有一次为真，而不考虑所有的判定结果。
4.判定－条件覆盖：设计足够的测试用例，使得判断条件中的所有条件可能至少执行一次取值，同时，所有判断的可能结果至少执行一次。
测试用例要满足如下条件：1.所有条件可能至少执行一次取值；2.所有判断的可能结果至少执行一次。
【优点】 ：能同时满足判定、条件两种覆盖标准。
【缺点】 ：判定/条件覆盖准则的缺点是未考虑条件的组合情况。
5. 条件组合覆盖：设计足够的测试用例，使得所有可能的条件取值组合至少执行一次。
【优点】 ：条件组合覆盖准则满足判定覆盖、条件覆盖和判定/条件覆盖准则。
【缺点】 ：线性地增加了测试用例的数量。
6.路径覆盖：设计所有的测试用例，来覆盖程序中的所有可能的执行路径 。
【优点】 ：这种测试方法可以对程序进行彻底的测试，比前面五种的覆盖面都广。
【缺点】 ：需要设计大量、复杂的测试用例，使得工作量呈指数级增长，不见得把所有的条件组合都覆盖。


赋予权限：
    chmod 755
    chmod a+x
    chmod u+x

u 代表用户

x代表执行权限

g 代表用户组.

o 代表其他.

a 代表所有.

+ 表示增加权限

在C++中，引用和指针的区别是
    指针可以被重新赋值，引用不可以，对象内容可以改变

有效等价类：指对于程序的规格说明来说是合理的、有意义的输入数据构成的集合。
等价类划分就是把全部输入数据合理地划分为若干等价类，在每一个等价类中取一个数据作为测试的输入条件，就可以用少量代表性的测试数据取得较好的测试结果。

负载测试是通过改变系统负载方式、增加负载等来发现系统中所存在的性能问题。负载测试是一种测试方法，可以为性能测试、压力测试所采用。负载测试的加载方式也有很多种，可以根据测试需要来选择。（不断的增加负载，是一种测试的方法）

性能测试是为获取或验证系统性能指标而进行测试。多数情况下，性能测试会在不同负载情况下进行。（获取系统的性能指标，不同的负载测试是其中的一项）
压力测试通常是在高负载情况下来对系统的稳定性进行测试，更有效地发现系统稳定性的隐患和系统在负载峰值的条件下功能隐患等。（高负载下的一种测试）

静态测试主要包括：
    静态质量度量法
    静态结构分析法
    代码检查法

1、drop (删除表)：删除内容和定义，释放空间。简单来说就是把整个表去掉.以后要新增数据是不可能的,除非新增一个表。

   drop语句将删除表的结构被依赖的约束（constrain),触发器（trigger)索引（index);依赖于该表的存储过程/函数将被保留，但其状态会变为：invalid。

2、truncate (清空表中的数据)：删除内容、释放空间但不删除定义(保留表的数据结构)。与drop不同的是,只是清空表数据而已。

   注意:truncate 不能删除行数据,要删就要把表清空。

3、delete (删除表中的数据)：delete 语句用于删除表中的行。delete语句执行删除的过程是每次从表中删除一行，并且同时将该行的删除操作作为事务记录在日志中保存

   以便进行进行回滚操作。

   truncate与不带where的delete ：只删除数据，而不删除表的结构（定义）

1，C / S也称为客户端/服务器或客户端/服务器模式。服务器通常使用高性能PC，工作站或小型计算机，并使用大型数据库系统，如Oracle，Sybase，Informix或SQL Server。客户端需要安装专用的客户端软件。

B / S是Brower / Server的缩写。客户端只需要安装浏览器，例如Netscape Navigator或Internet Explorer。服务器安装Oracle，Sybase，Informix或SQL Server等数据库。浏览器通过Web服务器与数据库交互。

2，不同的硬件环境：

C / S一般建立在专用网络，小范围的网络环境中，然后通过专用LAN服务器提供连接和数据交换服务。

B / S建立在WAN上。它不必是专用的网络硬件环境。例如，它连接到互联网，租用设备。信息由其自身管理。适应范围比C / S更强。通常，只要有操作系统和浏览器。

3，不同的安全要求：

C / S通常面向相对固定的用户组，并且对信息安全具有很强的控制力。通常，高度机密的信息系统采用C / S结构。它可以通过B / S部分发布。

B / S建立在WAN上，其安全控制能力相对较弱，并且是一个不可知的用户组。

4，不同的程序架构：

C / S程序可以更加注重进程，可以检查多级权限，并可以较少考虑系统的运行速度。

B / S对安全性和访问速度的多重考虑是基于对更多优化的需求。从MS的.Net系列开始，具有比C / S更高要求的程序架构是一种发展趋势。 BizTalk 2000 Exchange 2000等，完全支持网络组件构建系统。 SUN和IBM推出JavaBean组件技术等，使B / S更加成熟。

5，软件重用是不同的：

C / S程序不可避免地被视为一个整体，并且组件的可重用性不如B / S要求下的组件的可重用性。

B / S对的多重结构需要相对独立的组件功能。它可以相对较好地重复使用。购买的桌子可以重复使用，而不是墙上的石桌。

若一个IP地址为130.50.15.6,对应的子网掩码为255.255.252.0：

    ip地址与子网掩码相与,得网络号130.50.12.0；
    此ip地址是B类ip,子网掩码255.255.252.0,所以子网号是ip第三个字节的前六位000011；每个网络的子网个数是2的6次方减去2,即62个；主机号是ip的后十位1100000110；每个子网的主机数是2的十次方减去2,是1022个.

要先明白，ip地址=（网络号+子网号）网络地址 + 主机号
ip地址与子网掩码做与运算得到的是网络地址，网络地址=网络号+子网号，再把网络地址和原ip地址相比较，多出来的就是主机号
比如这题:将192.168.20.130和255.255.255.192转为二进制然后做与运算，得到网络地址:192.168.20.128
所以主机号为:0.0.0.2
看ip地址可知这是c类地址
所以网络号为:192.168.20.0
子网号为0.0.0.128
